// Copyright (c) State of Geneva (Switzerland)
// SPDX-License-Identifier: MPL-2.0

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccCustomNamingResource(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			// Create and Read testing
			{
				Config: `
variable "test_org_id" {
  description = "Organization where to generate test resources."
  type        = string
}

variable "test_project_id" {
  description = "Project where to generate test resources."
  type        = string
}

resource "aria_custom_naming" "test" {
  name        = "ARIA_PROVIDER_TEST_NAMING"
  description = "Temporary naming generated by Aria provider's acceptance tests."

  projects = [
    {
      active       = true
      org_default  = false
      org_id       = var.test_org_id
      project_id   = var.test_project_id
      project_name = "*"
    }
  ]

  templates = {
    "COMPUTE.Machine > Default" = {
      name               = ""
      resource_type      = "COMPUTE"
      resource_type_name = "Machine"
      unique_name        = true
      pattern            = "$${VM.srv_role}-$${#####}"
      static_pattern     = ""
      start_counter      = 1
      incrment_step      = 1
    }
    "COMPUTE.Machine > CACHE" = {
      name               = ""
      resource_type      = "COMPUTE"
      resource_type_name = "Machine"
      unique_name        = true
      pattern            = "$${VM.srv_role}-$${#####}"
      static_pattern     = "CACHE"
      start_counter      = 1
      incrment_step      = 1
    }
  }
}
`,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttrSet("aria_custom_naming.test", "id"),
					resource.TestCheckResourceAttr(
						"aria_custom_naming.test", "name", "ARIA_PROVIDER_TEST_NAMING",
					),
					resource.TestCheckResourceAttr(
						"aria_custom_naming.test", "description",
						"Temporary naming generated by Aria provider's acceptance tests.",
					),
					resource.TestCheckResourceAttr("aria_custom_naming.test", "projects.#", "1"),
					resource.TestCheckResourceAttr("aria_custom_naming.test", "templates.%", "2"),
				),
			},

			// Update (w/o changing templates) Templates Test
			{
				Config: `
variable "test_org_id" {
  description = "Organization where to generate test resources."
  type        = string
}

variable "test_project_id" {
  description = "Project where to generate test resources."
  type        = string
}

resource "aria_custom_naming" "test" {
  name        = "ARIA_PROVIDER_TEST_NAMING"
  description = "Temporary naming generated by Aria provider's acceptance tests (updated)."

  projects = [
    {
      active       = true
      org_default  = false
      org_id       = var.test_org_id
      project_id   = var.test_project_id
      project_name = "*"
    }
  ]

  templates = {
    "COMPUTE.Machine > Default" = {
      name               = ""
      resource_type      = "COMPUTE"
      resource_type_name = "Machine"
      unique_name        = true
      pattern            = "$${VM.srv_role}-$${#####}"
      static_pattern     = ""
      start_counter      = 1
      incrment_step      = 1
    }
    "COMPUTE.Machine > CACHE" = {
      name               = ""
      resource_type      = "COMPUTE"
      resource_type_name = "Machine"
      unique_name        = true
      pattern            = "$${VM.srv_role}-$${#####}"
      static_pattern     = "CACHE"
      start_counter      = 1
      incrment_step      = 1
    }
  }
}
`,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttrSet("aria_custom_naming.test", "id"),
					resource.TestCheckResourceAttr(
						"aria_custom_naming.test", "name", "ARIA_PROVIDER_TEST_NAMING",
					),
					resource.TestCheckResourceAttr(
						"aria_custom_naming.test", "description",
						"Temporary naming generated by Aria provider's acceptance tests (updated).",
					),
					resource.TestCheckResourceAttr("aria_custom_naming.test", "projects.#", "1"),
					resource.TestCheckResourceAttr("aria_custom_naming.test", "templates.%", "2"),
				),
			},

			// Update (add a templates) Templates Test
			{
				Config: `
variable "test_org_id" {
  description = "Organization where to generate test resources."
  type        = string
}

variable "test_project_id" {
  description = "Project where to generate test resources."
  type        = string
}

resource "aria_custom_naming" "test" {
  name        = "ARIA_PROVIDER_TEST_NAMING"
  description = "Temporary naming generated by Aria provider's acceptance tests (updated)."

  projects = [
    {
      active       = true
      org_default  = false
      org_id       = var.test_org_id
      project_id   = var.test_project_id
      project_name = "*"
    }
  ]

  templates = {
    "COMPUTE.Machine > Default" = {
      name               = ""
      resource_type      = "COMPUTE"
      resource_type_name = "Machine"
      unique_name        = true
      pattern            = "$${VM.srv_role}-$${#####}"
      static_pattern     = ""
      start_counter      = 1
      incrment_step      = 1
    }
    "COMPUTE.Machine > CACHE" = {
      name               = ""
      resource_type      = "COMPUTE"
      resource_type_name = "Machine"
      unique_name        = true
      pattern            = "$${VM.srv_role}-$${#####}"
      static_pattern     = "CACHE"
      start_counter      = 1
      incrment_step      = 1
    }
    "COMPUTE.Machine > DATABASE" = {
      name               = ""
      resource_type      = "COMPUTE"
      resource_type_name = "Machine"
      unique_name        = true
      pattern            = "$${VM.srv_role}-$${#####}"
      static_pattern     = "DATABASE"
      start_counter      = 1
      incrment_step      = 1
    }
  }
}
`,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttrSet("aria_custom_naming.test", "id"),
					resource.TestCheckResourceAttr(
						"aria_custom_naming.test", "name", "ARIA_PROVIDER_TEST_NAMING",
					),
					resource.TestCheckResourceAttr(
						"aria_custom_naming.test", "description",
						"Temporary naming generated by Aria provider's acceptance tests (updated).",
					),
					resource.TestCheckResourceAttr("aria_custom_naming.test", "projects.#", "1"),
					resource.TestCheckResourceAttr("aria_custom_naming.test", "templates.%", "3"),
				),
			},

			// Update (drop a templates) Templates Test
			{
				Config: `
variable "test_org_id" {
  description = "Organization where to generate test resources."
  type        = string
}

variable "test_project_id" {
  description = "Project where to generate test resources."
  type        = string
}

resource "aria_custom_naming" "test" {
  name        = "ARIA_PROVIDER_TEST_NAMING"
  description = "Temporary naming generated by Aria provider's acceptance tests (updated)."

  projects = [
    {
      active       = true
      org_default  = false
      org_id       = var.test_org_id
      project_id   = var.test_project_id
      project_name = "*"
    }
  ]

  templates = {
    "COMPUTE.Machine > Default" = {
      name               = ""
      resource_type      = "COMPUTE"
      resource_type_name = "Machine"
      unique_name        = true
      pattern            = "$${VM.srv_role}-$${#####}"
      static_pattern     = ""
      start_counter      = 1
      incrment_step      = 1
    }
    "COMPUTE.Machine > DATABASE" = {
      name               = ""
      resource_type      = "COMPUTE"
      resource_type_name = "Machine"
      unique_name        = true
      pattern            = "$${VM.srv_role}-$${#####}"
      static_pattern     = "DATABASE"
      start_counter      = 1
      incrment_step      = 1
    }
  }
}
`,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttrSet("aria_custom_naming.test", "id"),
					resource.TestCheckResourceAttr(
						"aria_custom_naming.test", "name", "ARIA_PROVIDER_TEST_NAMING",
					),
					resource.TestCheckResourceAttr(
						"aria_custom_naming.test", "description",
						"Temporary naming generated by Aria provider's acceptance tests (updated).",
					),
					resource.TestCheckResourceAttr("aria_custom_naming.test", "projects.#", "1"),
					resource.TestCheckResourceAttr("aria_custom_naming.test", "templates.%", "2"),
				),
			},

			// Update (modify a templates) Templates Test
			{
				Config: `
variable "test_org_id" {
  description = "Organization where to generate test resources."
  type        = string
}

variable "test_project_id" {
  description = "Project where to generate test resources."
  type        = string
}

resource "aria_custom_naming" "test" {
  name        = "ARIA_PROVIDER_TEST_NAMING"
  description = "Temporary naming generated by Aria provider's acceptance tests (updated)."

  projects = [
    {
      active       = true
      org_default  = false
      org_id       = var.test_org_id
      project_id   = var.test_project_id
      project_name = "*"
    }
  ]

  templates = {
    "COMPUTE.Machine > Default" = {
      name               = ""
      resource_type      = "COMPUTE"
      resource_type_name = "Machine"
      unique_name        = true
      pattern            = "$${VM.srv_role}-$${#####}"
      static_pattern     = ""
      start_counter      = 1
      incrment_step      = 1
    }
    "COMPUTE.Machine > DATABASE" = {
      name               = ""
      resource_type      = "COMPUTE"
      resource_type_name = "Machine"
      unique_name        = true
      pattern            = "$${VM.srv_role}-$${#####}"
      static_pattern     = "DATABASE"
      start_counter      = 5
      incrment_step      = 1
    }
  }
}
`,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttrSet("aria_custom_naming.test", "id"),
					resource.TestCheckResourceAttr(
						"aria_custom_naming.test", "name", "ARIA_PROVIDER_TEST_NAMING",
					),
					resource.TestCheckResourceAttr(
						"aria_custom_naming.test", "description",
						"Temporary naming generated by Aria provider's acceptance tests (updated).",
					),
					resource.TestCheckResourceAttr("aria_custom_naming.test", "projects.#", "1"),
					resource.TestCheckResourceAttr("aria_custom_naming.test", "templates.%", "2"),
				),
			},

			/*// Update Projects Test
						{
							Config: `
			variable "test_org_id" {
			  description = "Organization where to generate test resources."
			  type        = string
			}

			resource "aria_custom_naming" "test" {
			  name        = "ARIA_PROVIDER_TEST_NAMING"
			  description = "Temporary naming generated by Aria provider's acceptance tests (update projects)."

			  projects = []

			  templates = {
			    "COMPUTE.Machine > Default" = {
			      name               = ""
			      resource_type      = "COMPUTE"
			      resource_type_name = "Machine"
			      unique_name        = true
			      pattern            = "$${VM.srv_role}-$${#####}"
			      static_pattern     = ""
			      start_counter      = 1
			      incrment_step      = 1
			    }
			    "COMPUTE.Machine > WS-LAB-CACHE" = {
			      name               = ""
			      resource_type      = "COMPUTE"
			      resource_type_name = "Machine"
			      unique_name        = true
			      pattern            = "$${VM.srv_role}-$${#####}"
			      static_pattern     = "WS-LAB-CACHE"
			      start_counter      = 1
			      incrment_step      = 1
			    }
			    "COMPUTE.Machine > WS-LAB-DATABASE" = {
			      name               = ""
			      resource_type      = "COMPUTE"
			      resource_type_name = "Machine"
			      unique_name        = true
			      pattern            = "$${VM.srv_role}-$${#####}"
			      static_pattern     = "WS-LAB-DATABASE"
			      start_counter      = 1
			      incrment_step      = 1
			    }
			  }
			}
			`,
							// Check: TODO
						},*/
			// ImportState testing
			/*{
				ResourceName:      "aria_custom_naming.test",
				ImportState:       true,
				ImportStateVerify: true,
			},*/
			// Delete testing automatically occurs in TestCase
		},
	})
}

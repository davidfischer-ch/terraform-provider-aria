// Copyright (c) State of Geneva (Switzerland)
// SPDX-License-Identifier: MPL-2.0

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccCustomNamingResource(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			// Create and Read testing
			{
				Config: `
variable "test_org_id" {
  description = "Organization where to generate test resources."
  type        = string
}

variable "test_project_id" {
  description = "Project where to generate test resources."
  type        = string
}

locals {
  pattern = join("-", [
    "$${VM_Common.os_family}",
    "$${VM_Common.vlan}",
    "$${VM_Common.srv_role}",
    "$${#####}" # Counter
  ])
}

resource "aria_custom_naming" "test" {
  name        = "ARIA_PROVIDER_TEST_NAMING"
  description = "Temporary action generated by Aria provider's acceptance tests."

  projects = [
    {
      active       = true
      org_default  = true
      org_id       = var.test_org_id
      project_id   = var.test_project_id # Ensure its scoped
      project_name = "*"
    }
  ]

  templates = {
    "COMPUTE.Machine > Default" = {
      name               = ""
      resource_type      = "COMPUTE"
      resource_type_name = "Machine"
      unique_name        = true
      pattern            = local.pattern
      static_pattern     = ""
      start_counter      = 1
      incrment_step      = 1
    }
    "COMPUTE.Machine > RH-LAB-CACHE" = {
      name               = ""
      resource_type      = "COMPUTE"
      resource_type_name = "Machine"
      unique_name        = true
      pattern            = local.pattern
      static_pattern     = "RH-LAB-CACHE"
      start_counter      = 1
      incrment_step      = 1
    }
    "COMPUTE.Machine > WS-LAB-CACHE" = {
      name               = ""
      resource_type      = "COMPUTE"
      resource_type_name = "Machine"
      unique_name        = true
      pattern            = local.pattern
      static_pattern     = "WS-LAB-CACHE"
      start_counter      = 1
      incrment_step      = 1
    }
  }
}
`,
				/*Check: TODO,*/
			},
			// Update Test
			{
				Config: `
variable "test_org_id" {
  description = "Organization where to generate test resources."
  type        = string
}

variable "test_project_id" {
  description = "Project where to generate test resources."
  type        = string
}

locals {
  pattern = join("-", [
    "$${VM.os_family}",
    "$${VM.vlan}",
    "$${VM.srv_role}",
    "$${#####}" # Counter
  ])
}

resource "aria_custom_naming" "test" {
  name        = "ARIA_PROVIDER_TEST_NAMING"
  description = "Temporary action generated by Aria provider's acceptance tests (updated)."

  projects = [
    {
      active       = true
      org_default  = true
      org_id       = var.test_org_id
      project_id   = var.test_project_id # Ensure its scoped
      project_name = "*a*"
    }
  ]

  templates = {
    "COMPUTE.Machine > Default" = {
      name               = ""
      resource_type      = "COMPUTE"
      resource_type_name = "Machine"
      unique_name        = true
      pattern            = local.pattern
      static_pattern     = ""
      start_counter      = 1
      incrment_step      = 1
    }
    "COMPUTE.Machine > WS-LAB-CACHE" = {
      name               = ""
      resource_type      = "COMPUTE"
      resource_type_name = "Machine"
      unique_name        = true
      pattern            = local.pattern
      static_pattern     = "WS-LAB-CACHE"
      start_counter      = 1
      incrment_step      = 1
    }
    "COMPUTE.Machine > WS-LAB-DATABASE" = {
      name               = ""
      resource_type      = "COMPUTE"
      resource_type_name = "Machine"
      unique_name        = true
      pattern            = local.pattern
      static_pattern     = "WS-LAB-DATABASE"
      start_counter      = 1
      incrment_step      = 1
    }
  }
}
`,
				/*Check: TODO,*/
			},
			// Delete testing automatically occurs in TestCase
			// TODO Check https://developer.hashicorp.com/terraform/plugin/sdkv2/testing/acceptance-tests/testcase#checkdestroy
		},
	})
}

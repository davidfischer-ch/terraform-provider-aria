// Copyright (c) State of Geneva (Switzerland)
// SPDX-License-Identifier: MPL-2.0

package provider

import (
	"regexp"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccCatalogSourceForActionsResource(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			// Create and Read testing
			{
				Config: `
variable "test_project_id" {
	description = "Project where to generate test resources."
  type        = string
}

resource "aria_catalog_source" "test" {
  name        = "ARIA_PROVIDER_TEST_CATALOG_SOURCE_FOR_ACTIONS"
  description = "Temporary catalog source generated by Aria provider's acceptance tests."
  project_id  = var.test_project_id
  type_id     = "com.vmw.abx.actions"

  config = {
    source_project_id = var.test_project_id
  }

  wait_imported = false
}
`,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttrSet("aria_catalog_source.test", "id"),
					resource.TestCheckResourceAttr(
						"aria_catalog_source.test", "name", "ARIA_PROVIDER_TEST_CATALOG_SOURCE_FOR_ACTIONS",
					),
					resource.TestCheckResourceAttr(
						"aria_catalog_source.test", "description",
						"Temporary catalog source generated by Aria provider's acceptance tests.",
					),
					resource.TestCheckResourceAttr(
						"aria_catalog_source.test", "type_id", "com.vmw.abx.actions",
					),
					resource.TestCheckResourceAttr("aria_catalog_source.test", "global", "false"),
					resource.TestCheckResourceAttrSet("aria_catalog_source.test", "created_at"),
					resource.TestCheckResourceAttrSet("aria_catalog_source.test", "created_by"),
					resource.TestCheckResourceAttrSet("aria_catalog_source.test", "last_updated_at"),
					resource.TestCheckResourceAttrSet("aria_catalog_source.test", "last_updated_by"),
					resource.TestCheckResourceAttrSet("aria_catalog_source.test", "last_import_started_at"),
					resource.TestCheckNoResourceAttr("aria_catalog_source.test", "last_import_completed_at"),
					resource.TestCheckResourceAttr("aria_catalog_source.test", "last_import_errors.#", "0"),
					resource.TestCheckResourceAttr("aria_catalog_source.test", "items_found", "0"),
					resource.TestCheckResourceAttr("aria_catalog_source.test", "items_imported", "0"),
					resource.TestMatchResourceAttr(
						"aria_catalog_source.test", "project_id",
						regexp.MustCompile("[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"),
					),
					resource.TestCheckResourceAttr("aria_catalog_source.test", "wait_imported", "false"),
				),
			},

			// ImportState testing
			/* TODO https://github.com/davidfischer-ch/terraform-provider-aria/issues/111
			    {
			      ResourceName:      "aria_catalog_source.test",
			      ImportState:       true,
			      ImportStateVerify: true,
						// Prevent diff on force_delete field
						ImportStateVerifyIgnore: []string{"wait_imported"},
					},
			    }, */
			// Delete testing automatically occurs in TestCase
		},
	})
}

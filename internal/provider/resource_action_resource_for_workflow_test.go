// Copyright (c) State of Geneva (Switzerland)
// SPDX-License-Identifier: MPL-2.0

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccCatalogSourceForWorkflowResource(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			// Create and Read testing
			{
				Config: `
resource "aria_orchestrator_category" "root" {
  name      = "TEST_ARIA_PROVIDER"
  type      = "WorkflowCategory"
  parent_id = ""
}

resource "aria_orchestrator_workflow" "test" {
  name        = "Test Workflow for Catalog Source"
  description = "Workflow generated by the acceptance tests of Aria provider."
  category_id = aria_orchestrator_category.root.id
  version     = "0.1.0"

  position = { x = 100, y = 50 }

  restart_mode            = 1 # resume
  resume_from_failed_mode = 0 # default

  attrib        = jsonencode([])
  presentation  = jsonencode({})
  workflow_item = jsonencode([])

  input_parameters  = []
  output_parameters = []

  input_forms = jsonencode([
    {
      layout = {
        pages = []
      }
      schema = {}
    }
  ])
}

# Use the workflow as a Day 2 action
resource "aria_resource_action" "test" {
  name          = "AriaProviderTestRA"
  display_name  = "Aria Provider Test Workflow Based RA"
  description   = "Resource action generated by the acceptance tests of Aria provider."
  provider_name = "vro-workflow"
  resource_type = "Deployment"
  status        = "RELEASED"
  project_id    = ""
  runnable_item = {
    id            = aria_orchestrator_workflow.test.id
    name          = aria_orchestrator_workflow.test.name
    project_id    = ""
    type          = "vro.workflow"
    endpoint_link = aria_orchestrator_workflow.test.integration.endpoint_configuration_link
    input_parameters = [
      {
        name        = "deployment"
        description = "TODO"
        type        = "string"
      }
    ]
    output_parameters = []
  }
}
`,
				Check: resource.ComposeAggregateTestCheckFunc(

					// Resource Action - Core
					resource.TestCheckResourceAttrSet("aria_resource_action.test", "id"),
					resource.TestCheckResourceAttr("aria_resource_action.test", "name", "AriaProviderTestRA"),
					resource.TestCheckResourceAttr(
						"aria_resource_action.test", "display_name", "Aria Provider Test Workflow Based RA",
					),
					resource.TestCheckResourceAttr(
						"aria_resource_action.test", "description",
						"Resource action generated by the acceptance tests of Aria provider.",
					),
					resource.TestCheckResourceAttr("aria_resource_action.test", "provider_name", "vro-workflow"),
					resource.TestCheckResourceAttr("aria_resource_action.test", "resource_type", "Deployment"),
					resource.TestCheckResourceAttr("aria_resource_action.test", "status", "RELEASED"),
					resource.TestCheckResourceAttr("aria_resource_action.test", "project_id", ""),
					resource.TestCheckResourceAttrSet("aria_resource_action.test", "org_id"),

					// Resource Action - Form definition generated by the platform
					resource.TestCheckResourceAttrSet("aria_resource_action.test", "form_definition.id"),
					resource.TestCheckResourceAttr(
						"aria_resource_action.test", "form_definition.name", "AriaProviderTestRA",
					),
					resource.TestCheckResourceAttr("aria_resource_action.test", "form_definition.type", "requestForm"),
					resource.TestCheckResourceAttrSet("aria_resource_action.test", "form_definition.form"),
					resource.TestCheckResourceAttr("aria_resource_action.test", "form_definition.form_format", "JSON"),
					resource.TestCheckResourceAttr("aria_resource_action.test", "form_definition.styles", ""),
					resource.TestCheckResourceAttrPair(
						"aria_resource_action.test", "form_definition.source_id",
						"aria_resource_action.test", "id",
					),
					resource.TestCheckResourceAttr(
						"aria_resource_action.test", "form_definition.source_type", "resource.action",
					),
					resource.TestCheckResourceAttrSet("aria_resource_action.test", "form_definition.tenant"),
					resource.TestCheckResourceAttr("aria_resource_action.test", "form_definition.status", "ON"),
				),
			},
			// Delete testing automatically occurs in TestCase
		},
	})
}

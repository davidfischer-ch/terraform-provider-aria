// Copyright (c) State of Geneva (Switzerland)
// SPDX-License-Identifier: MPL-2.0

package provider

import (
	"regexp"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccOrchestratorConfigurationResource(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			// Create and Read testing
			{
				Config: `
resource "aria_orchestrator_category" "root" {
  name      = "TEST_ARIA_PROVIDER"
  type      = "ConfigurationElementCategory"
  parent_id = ""
}

resource "aria_orchestrator_configuration" "test" {
  name        = "Test Config"
  description = "Config generated by the acceptance tests of Aria provider."
  category_id = aria_orchestrator_category.root.id
  version     = "0.1.0"

  attributes = []

  force_delete = true
}
`,
				Check: resource.ComposeAggregateTestCheckFunc(
					resource.TestCheckResourceAttrSet("aria_orchestrator_configuration.test", "id"),
					resource.TestCheckResourceAttr("aria_orchestrator_configuration.test", "name", "Test Config"),
					resource.TestCheckResourceAttr("aria_orchestrator_configuration.test", "description", "Config generated by the acceptance tests of Aria provider."),
					resource.TestCheckResourceAttr("aria_orchestrator_configuration.test", "version", "0.1.0"),
					resource.TestMatchResourceAttr("aria_orchestrator_configuration.test", "version_id", regexp.MustCompile("[0-9a-f]{40}")),
					resource.TestCheckResourceAttr("aria_orchestrator_configuration.test", "attributes.#", "0"),
					resource.TestCheckResourceAttr("aria_orchestrator_configuration.test", "force_delete", "true"),
					resource.TestCheckResourceAttrPair(
						"aria_orchestrator_configuration.test", "category_id",
						"aria_orchestrator_category.root", "id",
					),
				),
			},
			// ImportState testing
			/*{
			  ResourceName:      "aria_orchestrator_action.test",
			  ImportState:       true,
			  ImportStateVerify: true,
			},*/
			// Delete testing automatically occurs in TestCase
		},
	})
}
